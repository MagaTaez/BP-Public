openapi: 3.0.3
info:
  title: BP - ARTEM API
  description: BP - ARTEM API
  termsOfService: http://bp-inventory-manager.io/terms/
  contact:
    email: apiteam@bp-inventory-manager.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://api.bp-inventory-manager.io/v1
tags:
  - name: ingredients
    description: API related to ingredients
  - name: suppliers
    description: API related to suppliers
paths:
  /ingredients:
    post:
      tags:
        - ingredients
      summary: Add a new ingredient to the inventory
      description: Add a new ingredient to the inventory
      operationId: addIngredient
      requestBody:
        description: ingredient
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientDTO'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - ingredients
      summary: Get all ingredients
      description: Get all ingredients
      operationId: getAllIngredients
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IngredientDTO'
        '400':
          description: Invalid status value
  /ingredients/{ingredientId}:
    get:
      tags:
        - ingredients
      summary: Find ingredient by ID
      description: Returns a single ingredient
      operationId: getIngredientById
      parameters:
        - name: ingredientId
          in: path
          description: ID of ingredient to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ingredient not found
    put:
      tags:
        - ingredients
      summary: Update an existing ingredient
      description: Update an existing ingredient by Id
      operationId: updateIngredient
      parameters:
        - name: ingredientId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ingredient
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ingredient not found
        '422':
          description: Validation exception
    delete:
      tags:
        - ingredients
      summary: Deletes an ingredient
      description: Deletes an ingredient
      operationId: deleteIngredient
      parameters:
        - name: ingredientId
          in: path
          description: Ingredient id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
  /suppliers:
    get:
      tags:
        - suppliers
      summary: Get all suppliers
      description: Get all suppliers
      operationId: getAllSuppliers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierDTO'
        '400':
          description: Invalid status value
    post:
      tags:
        - suppliers
      summary: Add a new supplier
      description: Create a new supplier
      operationId: addSupplier
      requestBody:
        description: supplier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierDTO'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /suppliers/{supplierId}:
    get:
      tags:
        - suppliers
      summary: Find supplier by ID
      description: Returns a single supplier
      operationId: getSupplierById
      parameters:
        - name: supplierId
          in: path
          description: ID of supplier to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Supplier not found
    put:
      tags:
        - suppliers
      summary: Update an existing supplier
      description: Update an existing supplier by Id
      operationId: updateSupplier
      parameters:
        - name: supplierId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: supplier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ingredient not found
        '422':
          description: Validation exception
    delete:
      tags:
        - suppliers
      summary: Deletes an supplier
      description: Deletes an supplier
      operationId: deleteSupplier
      parameters:
        - name: supplierId
          in: path
          description: Supplier id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
  /suppliers/orders:
    get:
      tags:
        - supplier-orders
      summary: Get all supplier orders
      description: Get all supplier orders
      operationId: getAllSupplierOrders
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierOrderDTO'
        '400':
          description: Invalid status value
    post:
      tags:
        - supplier-orders
      summary: Add a new supplier order
      description: Create a new supplier order
      operationId: addSupplierOrder
      requestBody:
        description: supplier order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierOrderDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierOrderDTO'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /suppliers/orders/{orderId}:
    get:
      tags:
        - supplier-orders
      summary: Find supplier order by ID
      description: Returns a single supplier order
      operationId: getSupplierOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of supplier order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierOrderDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Supplier not found
    put:
      tags:
        - supplier-orders
      summary: Update an existing supplier order
      description: Update an existing supplier order by Id
      operationId: updateSupplierOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: supplier order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierOrderDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierOrderDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ingredient not found
        '422':
          description: Validation exception
    delete:
      tags:
        - supplier-orders
      summary: Deletes an supplier order
      description: Deletes an supplier order
      operationId: deleteSupplierOrder
      parameters:
        - name: orderId
          in: path
          description: Supplier order id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
  /suppliers/orders/{orderId}/received:
    patch:
      tags:
        - supplier-orders
      summary: Considerate supplier order with given id as received
      description: Updating the status of receiving an order with a given id
      operationId: receiveOrder
      parameters:
        - name: orderId
          in: path
          description: Id of order to receive
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
  /products:
    post:
      tags:
        - products
      summary: Add a new product to the menu
      description: Add a new product to the menu
      operationId: addProduct
      requestBody:
        description: product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
        tags:
          - products
        summary: Get all products
        description: Get all products
        operationId: getAllProducts
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProductDTO'
          '400':
            description: Invalid status value
  /products/{productId}:
    get:
        tags:
          - products
        summary: Find products by ID
        description: Returns a single product
        operationId: getProductById
        parameters:
          - name: productId
            in: path
            description: ID of product to return
            required: true
            schema:
                type: integer
                format: int64
        responses:
            '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ProductDTO'
            '400':
              description: Invalid ID supplied
            '404':
              description: Product not found
    put:
        tags:
            - products
        summary: Update an existing product
        description: Update an existing product by Id
        operationId: updateProduct
        parameters:
          - name: productId
            in: path
            required: true
            schema:
              type: integer
              format: int64
        requestBody:
          description: product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
          required: true
        responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProductDTO'
          '400':
            description: Invalid ID supplied
          '404':
            description: Product not found
          '422':
            description: Validation exception
    delete:
      tags:
        - products
      summary: Deletes an product
      description: Deletes an product
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          description: Product id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
  /customers:
    post:
      tags:
        - customers
      summary: Add a new customer to the menu
      description: Add a new customer to the menu
      operationId: addCustomer
      requestBody:
        description: customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - customers
      summary: Get all customers
      description: Get all customers
      operationId: getAllCustomers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDTO'
        '400':
          description: Invalid status value
  /customers/{customerId}:
    get:
      tags:
        - customers
      summary: Find customer by ID
      description: Returns a single customer
      operationId: getCustomerById
      parameters:
        - name: customerId
          in: path
          description: ID of customer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Customer not found
    put:
      tags:
        - customers
      summary: Update an existing customer
      description: Update an existing customer by Id
      operationId: updateCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Customer not found
        '422':
          description: Validation exception
    delete:
      tags:
        - customers
      summary: Deletes an customer
      description: Deletes an customer
      operationId: deleteCustomer
      parameters:
        - name: customerId
          in: path
          description: Customer id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
  /customers/orders:
    get:
      tags:
        - customer-orders
      summary: Get all customer orders
      description: Get all customer orders
      operationId: getAllCustomerOrders
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerOrderDTO'
        '400':
          description: Invalid status value
    post:
      tags:
        - customer-orders
      summary: Add a new customer order
      description: Create a new customer order
      operationId: addCustomerOrder
      requestBody:
        description: customer order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOrderDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOrderDTO'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /customers/orders/{orderId}:
    get:
      tags:
        - customer-orders
      summary: Find customer order by ID
      description: Returns a single customer order
      operationId: getCustomerOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of customer order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOrderDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Customer not found
    put:
      tags:
        - customer-orders
      summary: Update an existing customer order
      description: Update an existing customer order by Id
      operationId: updateCustomerOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: customer order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOrderDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOrderDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Customer not found
        '422':
          description: Validation exception
    delete:
      tags:
        - customer-orders
      summary: Deletes an customer order
      description: Deletes an customer order
      operationId: deleteCustomerOrder
      parameters:
        - name: orderId
          in: path
          description: Customer order id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
  /customers/orders/{orderId}/delivered:
    patch:
      tags:
        - customer-orders
      summary: Considerate customer order with given id as delivered
      description: Updating the status of delivering an order with a given id
      operationId: deliverOrder
      parameters:
        - name: orderId
          in: path
          description: Id of order to deliver
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied

components:
  schemas:
    IngredientDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "My Ingredient"
        description:
          type: string
          example: "My Ingredient Description"
        stock:
          type: number
        unitsOfMeasure:
          type: string
          enum:
            - KG
            - G
            - PIECE
            - ML
    SupplierDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "My Supplier"
        description:
          type: string
          example: "My Supplier Description"
        email:
          type: string
          example: "supplier@mysupplier.com"
        phone:
          type: string
          example: "+420111222333"
    SupplierOrderDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        supplierId:
          type: integer
          format: int64
          example: 1
        orderDate:
          type: string
          format: date-time
          example: "2024-02-26T15:00:00"
        orderDeliveryDate:
          type: string
          format: date-time
          example: "2024-02-26T15:00:00"
        isReceived:
          type: boolean
        orderLines:
          type: array
          items:
            $ref: "#/components/schemas/SupplierOrderLineDTO"
    SupplierOrderLineDTO:
      type: object
      properties:
        quantity:
          type: number
          example: 2.5
        purchasePrice:
          type: number
          example: 57.9
        ingredientId:
          type: integer
          format: int64
    ProductDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "My Product"
        description:
          type: string
          example: "My Product Description"
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/ProductIngredientDTO"
    ProductIngredientDTO:
      type: object
      properties:
        quantity:
          type: number
          example: 0.2
        ingredientId:
          type: integer
          format: int64
    CustomerDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "My Customer"
        description:
          type: string
          example: "My Customer Description"
        email:
          type: string
          example: "customer@customer.com"
        phone:
          type: string
          example: "+420111222333"
    CustomerOrderDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        supplierId:
          type: integer
          format: int64
          example: 1
        orderDate:
          type: string
          format: date-time
          example: "2024-02-26T15:00:00"
        isDelivered:
          type: boolean
        orderLines:
          type: array
          items:
            $ref: "#/components/schemas/CustomerOrderLineDTO"
    CustomerOrderLineDTO:
      type: object
      properties:
        quantity:
          type: number
          example: 2.5
        sellPrice:
          type: number
          example: 57.9
        productId:
          type: integer
          format: int64